setclipboard('https://link-center.net/541634/ragdoll-clicker-script2')
getgenv().autoclciker = false;
_G.autorb = false;
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

Rayfield:Notify({
    Title = "Key",
    Content = "Key link is set to your  clipboard",
    Duration = 6.5,
    Image = 4483362458,
    Actions = { -- Notification Buttons
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
		},
	},
})
local Window = Rayfield:CreateWindow({
	Name = "ðSTRONGEST PUNCH SIMULATOR",
	LoadingTitle = ":)",
	LoadingSubtitle = "Have Fun!",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "https://link-target.net/541634/mine-racer-gui", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = true, -- Set this to true to use our key system
	KeySettings = {
		Title = "Gui",
		Subtitle = "Key System",
		Note = "Link is set to your clipboard (click Ctrl + v on google search)",
		FileName = "Keys",
		SaveKey = false,
		GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "https://pastebin.com/raw/qHX3Z7Fs"


   


	}


})



--------------------------------------------------------------------------------------------------
local Tab = Window:CreateTab("Farm",4483362458)
local Label = Tab:CreateLabel("Auto Orb Won't Work On Few Worlds")
function autorb()
  while _G.autorb == true do
local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
local world_number = game.Players.LocalPlayer.leaderstats.WORLD.value
print(world_number)
for i, v in pairs(game:GetService("Workspace").Map.Stages.Boosts[world_number]:GetDescendants()) do
if v.Name == "0" and v.Parent then
firetouchinterest(plr, v, 0)
firetouchinterest(plr, v, 1)
wait(0.3)
break;

end
end
wait(0.3)
    end
end
local Toggle = Tab:CreateToggle({
	Name = "Farm Orbs",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	_G.autorb = Value
     autorb()
	end,
})



function autofarm()
  while _G.autofarm == true do

local A_1 = 
{
	[1] = "Activate_Punch"
}
local Event = game:GetService("ReplicatedStorage").RemoteEvent
Event:FireServer(A_1)
wait(0.1)
    end
end


local Toggle = Tab:CreateToggle({
	Name = "Farm Punch",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	_G.autofarm = Value
     autofarm()
	end,
})

function autoreb()
  while _G.autoreb == true do
-- Script generated by Remote2Script
 
local A_1 = 
{
	[1] = "WarpPlrToOtherMap", 
	[2] = "Next"
}
local Event = game:GetService("ReplicatedStorage").RemoteEvent
Event:FireServer(A_1)

wait(5)

    end
end



local Toggle = Tab:CreateToggle({
	Name = "Auto Next Wrld",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	_G.autoreb = Value
     autoreb()
	end,
})




local Tab = Window:CreateTab("Misc",4483362458)


local Slider = Tab:CreateSlider({
	Name = "Fov",
	Range = {0, 120},
	Increment = 60,
	Suffix = "",
	CurrentValue = 70,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		game:GetService'Workspace'.Camera.FieldOfView = Value
    		-- The variable (Value) is a number which correlates to the value the slider is currently at
	end,
})

local Slider = Tab:CreateSlider({
	Name = "Walk Speed ",
	Range = {30, 120},
	Increment = 60,
	Suffix = "",
	CurrentValue = 50,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    		-- The variable (Value) is a number which correlates to the value the slider is currently at
	end,
})



local Button = Tab:CreateButton({
	Name = "Anti Afk",
	Callback = function()
		print("antiafk on") 
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)



	end,
})



local Button = Tab:CreateButton({
	Name = "Destroy",
	Callback = function()
		Rayfield:Destroy()
end,
})
